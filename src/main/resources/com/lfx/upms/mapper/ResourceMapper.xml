<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lfx.upms.mapper.ResourceMapper">
    <resultMap id="BaseResultMap" type="com.lfx.upms.domain.Resource">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="parent_id" jdbcType="BIGINT" property="parentId" />
        <result column="resource_key" jdbcType="VARCHAR" property="resourceKey" />
        <result column="label" jdbcType="VARCHAR" property="label" />
        <result column="icon" jdbcType="VARCHAR" property="icon" />
        <result column="resource_level" jdbcType="INTEGER" property="resourceLevel" />
        <result column="level_order" jdbcType="INTEGER" property="levelOrder" />
        <result column="leaf" jdbcType="BIT" property="leaf" />
        <result column="type" jdbcType="BIT" property="type" />
        <result column="create_user" jdbcType="BIGINT" property="createUser" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
    </resultMap>

    <resultMap id="PermissionMap" type="com.lfx.upms.domain.ResourcePermission">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="parent_id" jdbcType="BIGINT" property="parentId" />
        <result column="resource_key" jdbcType="VARCHAR" property="resourceKey" />
        <result column="label" jdbcType="VARCHAR" property="label" />
        <result column="icon" jdbcType="VARCHAR" property="icon" />
        <result column="resource_level" jdbcType="INTEGER" property="resourceLevel" />
        <result column="level_order" jdbcType="INTEGER" property="levelOrder" />
        <result column="leaf" jdbcType="BIT" property="leaf" />
        <result column="type" jdbcType="BIT" property="type" />
        <result column="create_user" jdbcType="BIGINT" property="createUser" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <collection property="permissionIds" ofType="java.lang.Long" javaType="java.util.List">
            <id column="permission_id"/>
        </collection>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, parent_id, resource_key, label, icon, resource_level, level_order, leaf, type, 
        create_user, create_time
    </sql>
    <select id="selectByExample" parameterType="com.lfx.upms.domain.ResourceExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from upms_resource
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from upms_resource
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from upms_resource
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.lfx.upms.domain.ResourceExample">
        delete from upms_resource
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.lfx.upms.domain.Resource">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into upms_resource (parent_id, resource_key, label, 
            icon, resource_level, level_order, 
            leaf, type, create_user, create_time
            )
        values (#{parentId,jdbcType=BIGINT}, #{resourceKey,jdbcType=VARCHAR}, #{label,jdbcType=VARCHAR}, 
            #{icon,jdbcType=VARCHAR}, #{resourceLevel,jdbcType=INTEGER}, #{levelOrder,jdbcType=INTEGER}, 
            #{leaf,jdbcType=BIT}, #{type,jdbcType=BIT}, #{createUser,jdbcType=BIGINT}, #{createTime,jdbcType=BIGINT}
            )
    </insert>
    <insert id="insertSelective" parameterType="com.lfx.upms.domain.Resource">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into upms_resource
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="resourceKey != null">
                resource_key,
            </if>
            <if test="label != null">
                label,
            </if>
            <if test="icon != null">
                icon,
            </if>
            <if test="resourceLevel != null">
                resource_level,
            </if>
            <if test="levelOrder != null">
                level_order,
            </if>
            <if test="leaf != null">
                leaf,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="parentId != null">
                #{parentId,jdbcType=BIGINT},
            </if>
            <if test="resourceKey != null">
                #{resourceKey,jdbcType=VARCHAR},
            </if>
            <if test="label != null">
                #{label,jdbcType=VARCHAR},
            </if>
            <if test="icon != null">
                #{icon,jdbcType=VARCHAR},
            </if>
            <if test="resourceLevel != null">
                #{resourceLevel,jdbcType=INTEGER},
            </if>
            <if test="levelOrder != null">
                #{levelOrder,jdbcType=INTEGER},
            </if>
            <if test="leaf != null">
                #{leaf,jdbcType=BIT},
            </if>
            <if test="type != null">
                #{type,jdbcType=BIT},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.lfx.upms.domain.ResourceExample" resultType="java.lang.Long">
        select count(*) from upms_resource
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByPrimaryKeySelective" parameterType="com.lfx.upms.domain.Resource">
        update upms_resource
        <set>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=BIGINT},
            </if>
            <if test="resourceKey != null">
                resource_key = #{resourceKey,jdbcType=VARCHAR},
            </if>
            <if test="label != null">
                label = #{label,jdbcType=VARCHAR},
            </if>
            <if test="icon != null">
                icon = #{icon,jdbcType=VARCHAR},
            </if>
            <if test="resourceLevel != null">
                resource_level = #{resourceLevel,jdbcType=INTEGER},
            </if>
            <if test="levelOrder != null">
                level_order = #{levelOrder,jdbcType=INTEGER},
            </if>
            <if test="leaf != null">
                leaf = #{leaf,jdbcType=BIT},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=BIT},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lfx.upms.domain.Resource">
        update upms_resource
        set parent_id = #{parentId,jdbcType=BIGINT},
            resource_key = #{resourceKey,jdbcType=VARCHAR},
            label = #{label,jdbcType=VARCHAR},
            icon = #{icon,jdbcType=VARCHAR},
            resource_level = #{resourceLevel,jdbcType=INTEGER},
            level_order = #{levelOrder,jdbcType=INTEGER},
            leaf = #{leaf,jdbcType=BIT},
            type = #{type,jdbcType=BIT},
            create_user = #{createUser,jdbcType=BIGINT},
            create_time = #{createTime,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectByUserId" resultMap="BaseResultMap">
        SELECT
            *
        FROM
            upms_resource
        WHERE id IN
        (
            SELECT DISTINCT
                c.resource_id
            FROM
                upms_user a
            INNER JOIN
                upms_user_role b ON a.id = #{userId,jdbcType=BIGINT} AND a.id = b.user_id
            INNER JOIN
                upms_role_resource c ON b.role_id = c.role_id

        )
        ORDER BY resource_level,level_order
    </select>

    <select id="selectLeafIdsByRoleIds" resultType="java.lang.Long">
        SELECT
            DISTINCT b.id
        FROM
            upms_role_resource a
        INNER JOIN
            upms_resource b ON a.resource_id = b.id AND b.leaf = 1 AND a.role_id IN
        <foreach collection="roleIds" item="roleId" open="(" close=")" separator=",">
            #{roleId,jdbcType=BIGINT}
        </foreach>
    </select>

    <select id="selectOnePermission" resultType="java.lang.Integer">
        select 1 from upms_resource_permission where resource_id = #{id,jdbcType=BIGINT} limit 1
    </select>

    <select id="selectOneRole" resultType="java.lang.Integer">
        select 1 from upms_role_resource where resource_id = #{id,jdbcType=BIGINT} limit 1
    </select>

    <select id="selectIdsByRoleId" resultType="java.lang.Long">
        select resource_id from upms_role_resource where role_id = #{roleId,jdbcType=BIGINT}
    </select>

    <delete id="deletePermission">
        delete from upms_resource_permission where resource_id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="grant">
        INSERT INTO
            upms_resource_permission(resource_id,permission_id,create_user,create_time)
        VALUES
        <foreach collection="permissionIds" item="permissionId" separator=",">
            (#{resourceId,jdbcType=BIGINT}, #{permissionId,jdbcType=BIGINT}, #{createUser,jdbcType=BIGINT}, #{createTime,jdbcType=BIGINT})
        </foreach>
    </insert>

    <select id="selectTreeWithPermission" resultMap="PermissionMap">
        SELECT
            a.*, b.permission_id as permission_id
        FROM
            upms_resource a
        LEFT JOIN
            upms_resource_permission b
        ON
            a.id = b.resource_id
        ORDER BY a.resource_level, a.level_order
    </select>
</mapper>