<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lfx.upms.mapper.PermissionMapper">
    <resultMap id="BaseResultMap" type="com.lfx.upms.domain.Permission">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="permission_key" jdbcType="VARCHAR" property="permissionKey" />
        <result column="label" jdbcType="VARCHAR" property="label" />
        <result column="create_user" jdbcType="BIGINT" property="createUser" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, permission_key, label, create_user, create_time
    </sql>
    <select id="selectByExample" parameterType="com.lfx.upms.domain.PermissionExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from upms_permission
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from upms_permission
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from upms_permission
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.lfx.upms.domain.PermissionExample">
        delete from upms_permission
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.lfx.upms.domain.Permission">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into upms_permission (permission_key, label, create_user, 
            create_time)
        values (#{permissionKey,jdbcType=VARCHAR}, #{label,jdbcType=VARCHAR}, #{createUser,jdbcType=BIGINT}, 
            #{createTime,jdbcType=BIGINT})
    </insert>
    <insert id="insertSelective" parameterType="com.lfx.upms.domain.Permission">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into upms_permission
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="permissionKey != null">
                permission_key,
            </if>
            <if test="label != null">
                label,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="permissionKey != null">
                #{permissionKey,jdbcType=VARCHAR},
            </if>
            <if test="label != null">
                #{label,jdbcType=VARCHAR},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.lfx.upms.domain.PermissionExample" resultType="java.lang.Long">
        select count(*) from upms_permission
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByPrimaryKeySelective" parameterType="com.lfx.upms.domain.Permission">
        update upms_permission
        <set>
            <if test="permissionKey != null">
                permission_key = #{permissionKey,jdbcType=VARCHAR},
            </if>
            <if test="label != null">
                label = #{label,jdbcType=VARCHAR},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lfx.upms.domain.Permission">
        update upms_permission
        set permission_key = #{permissionKey,jdbcType=VARCHAR},
            label = #{label,jdbcType=VARCHAR},
            create_user = #{createUser,jdbcType=BIGINT},
            create_time = #{createTime,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectByUserId" resultType="java.lang.String">
        SELECT
            c.permission_key
        FROM
            upms_user_role a
        INNER JOIN
            upms_role_permission b ON a.user_id = #{userId,jdbcType=BIGINT} and a.role_id = b.role_id
        INNER JOIN
            upms_permission c ON b.permission_id = c.id
    </select>

    <select id="selectIdsByRoleId" resultType="java.lang.Long">
        SELECT
            a.id
        FROM
            upms_permission a
        INNER JOIN
            upms_role_permission b ON a.id = b.permission_id and b.role_id = #{roleId,jdbcType=BIGINT}
    </select>

    <select id="selectOneResource" resultType="java.lang.Integer">
        select 1 from upms_resource_permission where permission_id in
        <foreach collection="permissionIds" item="permissionId" separator="," open="(" close=")">
            #{permissionId,jdbcType=BIGINT}
        </foreach>
        limit 1
    </select>

    <select id="selectOneRole" resultType="java.lang.Integer">
        select 1 from upms_role_permission where permission_id in
        <foreach collection="permissionIds" item="permissionId" separator="," open="(" close=")">
            #{permissionId,jdbcType=BIGINT}
        </foreach>
        limit 1
    </select>
</mapper>