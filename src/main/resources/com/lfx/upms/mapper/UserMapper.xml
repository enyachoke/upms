<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lfx.upms.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.lfx.upms.domain.User">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="username" jdbcType="VARCHAR" property="username" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="nickname" jdbcType="VARCHAR" property="nickname" />
        <result column="mobile" jdbcType="VARCHAR" property="mobile" />
        <result column="email" jdbcType="VARCHAR" property="email" />
        <result column="avatar" jdbcType="VARCHAR" property="avatar" />
        <result column="gender" jdbcType="BIT" property="gender" />
        <result column="birthday" jdbcType="BIGINT" property="birthday" />
        <result column="create_user" jdbcType="BIGINT" property="createUser" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="reset_pwd_time" jdbcType="BIGINT" property="resetPwdTime" />
        <result column="frozen" jdbcType="BIT" property="frozen" />
        <result column="disable" jdbcType="BIT" property="disable" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, username, password, nickname, mobile, email, avatar, gender, birthday, create_user, 
        create_time, reset_pwd_time, frozen, disable
    </sql>
    <select id="selectByExample" parameterType="com.lfx.upms.domain.UserExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from upms_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from upms_user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from upms_user
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.lfx.upms.domain.UserExample">
        delete from upms_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.lfx.upms.domain.User">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into upms_user (username, password, nickname, 
            mobile, email, avatar, 
            gender, birthday, create_user, 
            create_time, reset_pwd_time, frozen, 
            disable)
        values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
            #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, 
            #{gender,jdbcType=BIT}, #{birthday,jdbcType=BIGINT}, #{createUser,jdbcType=BIGINT}, 
            #{createTime,jdbcType=BIGINT}, #{resetPwdTime,jdbcType=BIGINT}, #{frozen,jdbcType=BIT}, 
            #{disable,jdbcType=BIT})
    </insert>
    <insert id="insertSelective" parameterType="com.lfx.upms.domain.User">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into upms_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="nickname != null">
                nickname,
            </if>
            <if test="mobile != null">
                mobile,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="avatar != null">
                avatar,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="resetPwdTime != null">
                reset_pwd_time,
            </if>
            <if test="frozen != null">
                frozen,
            </if>
            <if test="disable != null">
                disable,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="avatar != null">
                #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=BIT},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=BIGINT},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=BIGINT},
            </if>
            <if test="resetPwdTime != null">
                #{resetPwdTime,jdbcType=BIGINT},
            </if>
            <if test="frozen != null">
                #{frozen,jdbcType=BIT},
            </if>
            <if test="disable != null">
                #{disable,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.lfx.upms.domain.UserExample" resultType="java.lang.Long">
        select count(*) from upms_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByPrimaryKeySelective" parameterType="com.lfx.upms.domain.User">
        update upms_user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                mobile = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="avatar != null">
                avatar = #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=BIT},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=BIGINT},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=BIGINT},
            </if>
            <if test="resetPwdTime != null">
                reset_pwd_time = #{resetPwdTime,jdbcType=BIGINT},
            </if>
            <if test="frozen != null">
                frozen = #{frozen,jdbcType=BIT},
            </if>
            <if test="disable != null">
                disable = #{disable,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lfx.upms.domain.User">
        update upms_user
        set username = #{username,jdbcType=VARCHAR},
            password = #{password,jdbcType=VARCHAR},
            nickname = #{nickname,jdbcType=VARCHAR},
            mobile = #{mobile,jdbcType=VARCHAR},
            email = #{email,jdbcType=VARCHAR},
            avatar = #{avatar,jdbcType=VARCHAR},
            gender = #{gender,jdbcType=BIT},
            birthday = #{birthday,jdbcType=BIGINT},
            create_user = #{createUser,jdbcType=BIGINT},
            create_time = #{createTime,jdbcType=BIGINT},
            reset_pwd_time = #{resetPwdTime,jdbcType=BIGINT},
            frozen = #{frozen,jdbcType=BIT},
            disable = #{disable,jdbcType=BIT}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="countByCreateTime" resultType="java.lang.Integer">
        <![CDATA[
            select count(*) from upms_user where create_time >= #{startTime,jdbcType=BIGINT} and create_time < #{endTime,jdbcType=BIGINT}
        ]]>
    </select>

    <select id="selectIdsByRoleId" resultType="java.lang.Long">
        select user_id from upms_user_role where role_id = #{roleId,jdbcType=BIGINT}
    </select>

    <select id="selectUsernameByRoleId" resultType="java.lang.String">
        select b.username from upms_user_role a inner join upms_user b on a.user_id = b.id and a.role_id = #{roleId,jdbcType=BIGINT}
    </select>

    <delete id="deleteRoleByUserId">
        delete from upms_user_role where user_id = #{userId,jdbcType=BIGINT}
    </delete>

    <insert id="grant">
        INSERT INTO
            upms_user_role(user_id,role_id,create_user,create_time)
        VALUES
        <foreach collection="roleIds" item="roleId" separator=",">
            (#{userId,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}, #{createUser,jdbcType=BIGINT}, #{createTime,jdbcType=BIGINT} )
        </foreach>
    </insert>
</mapper>